version: '3.2'
services:
  base: &base
    image: jellysimulation:1.0.0
    build:
      context: .
      dockerfile: ./Dockerfile
      args:
        RUBY_VERSION: '2.5.8'
        PG_MAJOR: '12'
        NODE_MAJOR: '12'
        YARN_VERSION: '1.13.0'
        BUNDLER_VERSION: '2.1.4'
    environment:
      - NODE_ENV=development
      - RAILS_ENV=development
      - WEBPACKER_DEV_SERVER_HOST=webpack
      - DB_HOST=postgres
      - DB_USER=postgres
      - DB_PASSWORD=foobar123
      - POSTGRES_USER=postgres # needed on init to create role matching DB_USER
      - POSTGRES_PASSWORD=foobar123 # needed on init to create role matching DB_USER
      - HISTFILE=/app/log/.bash_history
      - BOOTSNAP_CACHE_DIR=/usr/local/bundle/_bootsnap
      - PSQL_HISTFILE=/app/log/.psql_history
      - EDITOR=vi
    tmpfs:
      - /tmp
    volumes:
      - '.:/app'
      - bundle:/usr/local/bundle
      - node_modules:/app/node_modules
    links:
      - db

  db:
    image: postgres:12
    volumes:
      - pgdata:/var/lib/postgresql/data
      - '.dockerdev/init.sql:/docker-entrypoint-initdb.d/init.sql'
    expose:
      - '5433'
    ports:
      - '5433:5433'
    environment:
      POSTGRES_HOST_AUTH_METHOD: "trust"

  railsapp:
    <<: *base
    # command: .docker/web-startup.sh
    command: .docker/startup.sh
    ports:
      - '3000:3000'

  webpack:
    <<: *base
    command: ./bin/webpack-dev-server
    volumes:
      - '.:/app'
      - bundle:/usr/local/bundle
      - packs:/app/public/packs
      - node_modules:/app/node_modules
    ports:
      - '3035:3035'
    environment:
      - WEBPACKER_DEV_SERVER_HOST=0.0.0.0

volumes:
  bundle:
  pgdata:
  node_modules:
  packs: